Vec2 :: (u32, u32);
add_vec2: (Vec2, Vec2) -> Vec2 = ((a, b), (c, d)) -> (a.add(c), b.add(d));

Option<'a> :: [Some 'a, None];
unwrap<'a> :: Option<'a> -> 'a;
unwrap Some[x] -> x;
unwrap None[_] -> unreachable;

add: (u32, u32) -> u32 = ();
inc: u32 -> u32 = x -> x.add(1);

map<'a, 'b> :: (Option<'a>, 'a -> 'b) -> Option<'b>; 
map (Some[x], f) -> Some[f(x)];
map (None[_], _) -> None[{}];

if<'a> :: (bool, 'a, 'a) -> 'a;
if (true, x, _) -> x;
if (false, _, x) -> x;

Slice<'a> :: {len usize, data Ptr<'a>};
get<'a>: (Slice<'a>, usize) -> Option<'a> 
  = (slice, index) -> if(
    index.less(slice.len),
    Some[slice.data.add('a.size().mul(index)).deref()], 
    None[]
  );

main: () -> () = x -> {
  a: u32 = 1;
  b: u32 = 0;
  c: Vec2 = (a, b);
  d: Vec2 = (3, 2);
  e: Vec2 = c.add(d);
};
